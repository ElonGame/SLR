setRenderer("method": "PT", ("samples": 16384,));
setRenderSettings("width": 1920, "height": 1080, "brightness": 2.0);
setEnvironment("images/Malibu_Overlook_3k_corrected.exr");
//setRenderSettings("width": 1920, "height": 1080, "brightness": 40.0);
//setEnvironment("images/Playa_Sunrise_corrected.exr");

plain = load3DModel("models/plain_proto.assbin");
addChild(root, plain);

function grassMaterial(name, attrs) {
    difCol = attrs["diffuse color"];
    RTex = SpectrumTexture(Spectrum("Reflectance", "sRGB", 
                                    2 * difCol[0], 2 * difCol[1], 2 * difCol[2]));
    return createSurfaceMaterial("matte", (RTex,));
}
grass = load3DModel("models/grass.assbin", grassMaterial);
grassReference = createReferenceNode(grass);

function scanCallback(p, t, b, n) {
    // needs member access like p.x?
    trans = translate(getX(p), getY(p), getZ(p));
    axis = cross(Vector(0, 1, 0), n);
    angle = acos(clamp(dot(Vector(0, 1, 0), n), -1, 1));
    if (angle < 0.0001)
        axis = Vector(1, 0, 0);
    rot = rotate(angle, axis);
    sc = scale(0.25);
    rotY = rotateY(2 * 3.1415926536 * random());
    instanceNode = createNode();
    addChild(instanceNode, grassReference);
    setTransform(instanceNode, trans * rot * sc * rotY);
    addChild(root, instanceNode);
}

scanXZFromYPlus(plain, 60, 60, scanCallback);

function lowpolyTreeMaterial(name, attrs) {
    difCol = attrs["diffuse color"];
    RdTex = SpectrumTexture(Spectrum("Reflectance", "sRGB", 
                                     2 * difCol[0], 2 * difCol[1], 2 * difCol[2]));
    RsTex = SpectrumTexture(Spectrum("type": "Reflectance", 0.025));
    nxTex = nyTex = FloatTexture(100.0);
    return createSurfaceMaterial("Ashikhmin", (RdTex, RsTex, nxTex, nyTex));
}
lowpolyTree = load3DModel("models/lowpoly_tree.assbin", lowpolyTreeMaterial);
setTransform(lowpolyTree, translate(0.3727, 0.8596, 0.8495) * scale(0.25));
addChild(root, lowpolyTree);

function toyCarMaterial(name, attrs) {
    difCol = attrs["diffuse color"];
    RdTex = SpectrumTexture(Spectrum(1.5 * difCol[0], 1.5 * difCol[1], 1.5 * difCol[2]));
    RsTex = SpectrumTexture(Spectrum("type": "Reflectance", 0.025));
    nxTex = nyTex = FloatTexture(100.0);
    return createSurfaceMaterial("Ashikhmin", (RdTex, RsTex, nxTex, nyTex));
}
toyCar = load3DModel("models/toycar.assbin", toyCarMaterial);
setTransform(toyCar, 
             translate(0.0, 0.72593, 1.4) * 
             rotateZ(0.0) * 
             rotateY(105.319 * 3.1415926536 / 180.0) * 
             rotateX(-16.663 * 3.1415926536 / 180.0) *
             scale(0.1));
addChild(root, toyCar);

cameraNode = createNode();
camera = createPerspectiveCamera("aspect": 16.0 / 9.0, "fovY": 0.5235987756, "radius": 0.0025, 
                                     "imgDist": 1.0, "objDist": 2.4);
addChild(cameraNode, camera);
setTransform(cameraNode, translate(2.158, 0.825, 2.38) * 
                        rotateY(-(180.0 - 49.9) * 3.1415926536 / 180) * 
                        rotateX(-5.44 * 3.1415926536 / 180));
addChild(root, cameraNode);

setTransform(root, rotateY(-1.5707963268));
